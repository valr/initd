#!/bin/ash

# This file is part of initsystem
#
# Copyright (C) 2015 ValÃ¨re Monseur (valere dot monseur at ymail dot com)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

PATH=/opt/busybox

. /etc/rc.conf

rc_status() {

  shift

  [ -x /usr/bin/udevd ] && DEFAULT_SERVICES="eudev"
  [ -x /usr/lib/systemd/systemd-udevd ] && DEFAULT_SERVICES="udev"

  ENABLED_SERVICES="${DEFAULT_SERVICES} ${SERVICES}"
  case "$1" in
    all) SERVICES=`find /etc/rc.d/* -type f -exec basename {} \;` ;;
    "") SERVICES="${ENABLED_SERVICES}" ;;
    *) SERVICES="$@" ;;
  esac

  ENABLED_SERVICES=`echo "${ENABLED_SERVICES}" | tr ' ' '\n' | grep -v '^$' | sort`
  SERVICES=`echo "${SERVICES}" | tr ' ' '\n' | grep -v '^$' | sort`

  STATUS=0
  for SERVICE in ${SERVICES}; do
    if [ -e /etc/rc.d/"${SERVICE}" ]; then
      STATUS1="disabled"
      STATUS2="n/a"

      if echo "${ENABLED_SERVICES}" | grep -Fxq "${SERVICE}"; then
        STATUS1="enabled"

        # FIXME: find a better way to determine if the rc script provides a 'status' function
        if grep rc_run /etc/rc.d/"${SERVICE}" | grep -Fq status; then
          /etc/rc.d/"${SERVICE}" status 1>/dev/null 2>/dev/null

          if [ $? -eq 0 ]; then
            STATUS2="started"
          else
            STATUS=$?
            STATUS2="stopped"
          fi
        fi
      fi

      case "$1" in
        all)
          echo "${SERVICE} ${STATUS1} ${STATUS2}"
          ;;
        "")
          if [ "${STATUS2}" != "n/a" ]; then
            echo "${SERVICE} ${STATUS2}"
          fi
          ;;
        *)
          echo "${SERVICE} ${STATUS1} ${STATUS2}"

          if [ "${STATUS2}" = "started" ]; then
            /etc/rc.d/"${SERVICE}" status
          fi
          ;;
      esac
    else
      echo "error: /etc/rc.d/${SERVICE} doesn't exist"
    fi
  done

  return $STATUS
}

rc_run() {
  if [ `id -u` != 0 ]; then
    echo "error: this script should be run as root"
    return 1
  fi

  if [ $# -lt 2 ]; then
    rc_usage
    return 1
  fi

  ACTION="$1"
  shift

  STATUS=0
  while [ $# -ne 0 ]; do
    if [ -e /etc/rc.d/"$1" ]; then
      /etc/rc.d/"$1" "${ACTION}" || STATUS=$?
    else
      echo "error: /etc/rc.d/$1 doesn't exist"
      STATUS=1
    fi

    shift
  done

  return $STATUS
}

rc_usage() {
  echo "usage: `basename $0` status [all|service...]"
  echo "       `basename $0` {start|stop|restart|reload|display} service..."

  return 1
}

case "$1" in
  status)
    rc_status $@
    ;;
  start|stop|restart|reload|display)
    rc_run $@
    ;;
  *)
    rc_usage
    ;;
esac

exit $?
