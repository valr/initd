#!/bin/ash

# This file is part of initsystem
#
# Copyright (C) 2014-2017 Val√®re Monseur (valere dot monseur at ymail dot com)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

export PATH=/opt/busybox
export LC_ALL=C

cd /
umask 022

. /etc/rc.conf
. /etc/rc.subr

################################################################################
# sanity check #################################################################
################################################################################

if [ $PPID != 1 ]; then
  echo "shutdown: this script should have ppid 1"
  exit 1
fi

################################################################################
# terminal settings ############################################################
################################################################################

stty sane < /dev/console
echo ""

################################################################################
# kill user processes ##########################################################
################################################################################

echo "shutdown: sending SIGTERM to user processes"

USERS=$(users | tr ' ' '|')
if [ $USERS ]; then
  PIDS=$(ps -eo pid,user | grep -E "($USERS)" | grep -v 'root' | awk '{print $1}')
  if [ $PIDS ]; then
    kill -TERM $PIDS 1>/dev/null 2>/dev/null
    pidwait "$PIDS" 120
  fi
fi

################################################################################
# local script #################################################################
################################################################################

echo "shutdown: running local shutdown script"

. /etc/rc.shutdown.local

################################################################################
# services #####################################################################
################################################################################

echo "shutdown: stopping services"

REVERSE_SERVICES=""

for SERVICE in $SERVICES; do
  REVERSE_SERVICES="$SERVICE $REVERSE_SERVICES"
done

for SERVICE in $REVERSE_SERVICES; do
  echo $SERVICE
  /etc/rc.d/$SERVICE stop
done

################################################################################
# devices ######################################################################
################################################################################

echo "shutdown: stopping devices manager"

if [ -x /etc/rc.d/eudev ]; then
  /etc/rc.d/eudev stop
elif [ -x /etc/rc.d/udev ]; then
  /etc/rc.d/udev stop
fi

################################################################################
# kill processes ###############################################################
################################################################################

echo "shutdown: sending SIGTERM to processes"

killall5 -TERM
pidwait5 120

if [ $? -ne 0 ]; then
  echo "shutdown: sending SIGKILL to processes"

  killall5 -KILL
  pidwait5 120
fi

################################################################################
# random seed ##################################################################
################################################################################

echo "shutdown: saving random seed"

RANDOM_SEED=/var/lib/misc/random-seed

touch $RANDOM_SEED
chmod 600 $RANDOM_SEED

POOL_FILE=/proc/sys/kernel/random/poolsize

if [ -r $POOL_FILE ]; then
  POOL_SIZE=$(cat $POOL_FILE)
else
  POOL_SIZE=512
fi

dd if=/dev/urandom of=$RANDOM_SEED count=1 bs=$POOL_SIZE 1>/dev/null 2>/dev/null

################################################################################
# dmesg ########################################################################
################################################################################

echo "shutdown: saving dmesg"

umask 077
dmesg > /var/log/dmesg.shutdown
umask 022

################################################################################
# filesystems ##################################################################
################################################################################

echo "shutdown: syncing filesystems"

sync; sleep 1

echo "shutdown: unmounting swap-backed filesystems"

cat /proc/self/mounts | cut -d ' ' -f 2,3 | sort -r -k1,1 | \
while read -r MOUNT TYPE; do
  case $MOUNT in
    /|/proc|/sys|/run|/dev|/dev/pts) ;;
    *) [ $TYPE = 'tmpfs' ] && umount -r $MOUNT ;;
  esac
done

echo "shutdown: deactivating swap"

swapoff -a

echo "shutdown: unmounting filesystems"

cat /proc/self/mounts | cut -d ' ' -f 2 | sort -r | \
while read -r MOUNT; do
  case $MOUNT in
    /|/proc|/sys|/run|/dev|/dev/pts) ;;
    *) umount -r $MOUNT ;;
  esac
done

echo "shutdown: remounting root filesystem read-only"

mount -o remount,ro /

################################################################################
# finish #######################################################################
################################################################################

case $1 in
  halt)
    echo "shutdown: system is halting"
    /usr/bin/busybox halt -f
    ;;
  poweroff)
    echo "shutdown: system is shutting down"
    /usr/bin/busybox poweroff -f
    ;;
  reboot)
    echo "shutdown: system is rebooting"
    /usr/bin/busybox reboot -f
    ;;
esac

echo "error: unexpected shutdown condition, halting now"
/usr/bin/busybox halt -f

# vim: set filetype=sh:
