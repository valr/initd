# This file is part of initsystem
#
# Copyright (C) 2014-2017 ValÃ¨re Monseur (valere dot monseur at ymail dot com)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

. /etc/rc.conf

SRV="$(basename "$0" | tr '-' '_')"
for CMD in start stop reload display; do
  eval "rc_${CMD}_cmd=\${${SRV}_${CMD}_cmd:-\${rc_${CMD}_cmd}}"
done

################################################################################
# functions ####################################################################
################################################################################

pwait() {
  for i in $(seq $2); do
    pgrep -fx "$1" 1>/dev/null 2>/dev/null

    if [ $? -ne 0 ]; then
      return 0
    fi

    sleep .25
  done

  return 1
}

################################################################################
# commands #####################################################################
################################################################################

start() {
  if [ "${rc_type:-daemon}" = "daemon" ]; then
    pgrep -fx "${rc_start_cmd}" 1>/dev/null 2>/dev/null && return 0
  fi

  type rc_pre_start 1>/dev/null && { rc_pre_start || return; }

  ash -c "${rc_env} ${rc_start_cmd}" || return

  type rc_post_start 1>/dev/null && { rc_post_start || return; }

  return 0
}

stop() {
  if [ "${rc_type:-daemon}" = "daemon" ]; then
    pgrep -fx "${rc_start_cmd}" 1>/dev/null 2>/dev/null || return 0
  fi

  if [ -z "${rc_stop_cmd}" ]; then
    rc_stop_cmd="pkill -TERM -fx \"${rc_start_cmd}\""
  fi

  type rc_pre_stop 1>/dev/null && { rc_pre_stop || return; }

  ash -c "${rc_env} ${rc_stop_cmd}"

  if [ "${rc_type:-daemon}" = "daemon" ]; then
    pwait "${rc_start_cmd}" 20 || return
  fi

  type rc_post_stop 1>/dev/null && { rc_post_stop || return; }

  return 0
}

restart() {
  stop
  start
}

reload() {
  if [ "${rc_type:-daemon}" = "daemon" ]; then
    pgrep -fx "${rc_start_cmd}" 1>/dev/null 2>/dev/null || return 1
  fi

  if [ -z "${rc_reload_cmd}" ]; then
    rc_reload_cmd="pkill -HUP -fx \"${rc_start_cmd}\""
  fi

  ash -c "${rc_env} ${rc_reload_cmd}"
}

display() {
  ash -c "${rc_env} ${rc_display_cmd}"
}

status() {
  PID=$(pgrep -fx "${rc_start_cmd}" 2>/dev/null | tr '\n' ' ')

  if [ "${PID}" ]; then
    echo "$(basename "$0") is started as pid: ${PID}"; return 0
  else
    echo "$(basename "$0") is stopped"; return 1
  fi
}

################################################################################
# run ##########################################################################
################################################################################

_rc_run() {
  export PATH=/opt/busybox
  export LC_ALL=C
  cd / ; umask 022

  "$1"; STATUS=$?

  if [ "$1" != "status" ]; then
    if [ $STATUS -eq 0 ]; then
      echo "$(basename "$0") ($1) ok"
    else
      echo "$(basename "$0") ($1) failed"
    fi
  fi

  return $STATUS
}

rc_run() {
  if [ "$2" = "has" ]; then
    CMD_ASKED="$3"
  else
    CMD_ASKED="$2"
  fi

  for CMD in $1; do
    if [ "x${CMD}" = "x${CMD_ASKED}" ]; then
      if [ "$2" != "has" ]; then
        _rc_run "${CMD}"; return $?
      fi

      return 0
    fi
  done

  if [ "$2" != "has" ]; then
    echo "usage: $(basename "$0") {${1// /|}}"
  fi

  return 1
}

# vim: set filetype=sh:
