#!/bin/ash

# This file is part of initsystem
#
# Copyright (C) 2014-2017 ValÃ¨re Monseur (valere dot monseur at ymail dot com)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

export PATH=/opt/busybox
export LC_ALL=C

cd /
umask 022

. /etc/rc.conf

################################################################################
# sanity check #################################################################
################################################################################

if [ $PPID != 1 ]; then
  echo "initscript: this script should have ppid 1"
  exit 1
fi

################################################################################
# in-memory filesystems ########################################################
################################################################################

echo "initscript: mounting in-memory filesystems"

mount -t proc -o nosuid,nodev,noexec proc /proc
mount -t sysfs -o nosuid,nodev,noexec sys /sys
mount -t tmpfs -o nosuid,nodev,mode=0755 run /run
mount -t devtmpfs -o nosuid,mode=0755 dev /dev
mkdir -p /dev/pts
mount -t devpts -o nosuid,noexec,gid=5,mode=0620,ptmxmode=0 pts /dev/pts
mkdir -p /dev/shm
mount -t tmpfs -o nosuid,nodev shm /dev/shm

################################################################################
# hostname #####################################################################
################################################################################

echo "initscript: setting hostname"

if [ $HOSTNAME ]; then
  hostname $HOSTNAME
fi

################################################################################
# hardware clock ###############################################################
################################################################################

echo "initscript: setting clock"

hwclock -t -u

################################################################################
# volatile and temporary files #################################################
################################################################################

echo "initscript: setting volatile and temporary files"

if [ -x /usr/bin/systemd-tmpfiles ]; then
  /usr/bin/systemd-tmpfiles --prefix=/dev --create --boot
elif [ -x /usr/bin/tmpfiles ]; then
  /usr/bin/tmpfiles --prefix=/dev
fi

################################################################################
# devices ######################################################################
################################################################################

echo "initscript: starting devices manager"

if [ -x /usr/lib/systemd/systemd-udevd ]; then
  /etc/rc.d/udev start
elif [ -x /usr/bin/udevd ]; then
  /etc/rc.d/eudev start
fi

################################################################################
# modules ######################################################################
################################################################################

echo "initscript: loading modules"

DIR1=/etc/modules-load.d
DIR2=/run/modules-load.d
DIR3=/usr/lib/modules-load.d

for FILE in $(find $DIR1 $DIR2 $DIR3 -name '*.conf' -exec basename '{}' \; 2>/dev/null | sort -u); do

  [ -r $DIR3/$FILE ] && IFILE=$DIR3/$FILE
  [ -r $DIR2/$FILE ] && IFILE=$DIR2/$FILE
  [ -r $DIR1/$FILE ] && IFILE=$DIR1/$FILE

  grep -v '^[[:space:]]*$' $IFILE | grep -E -v '^[[:space:]]*(#|;)' | \
  while read -r MODULE; do
    modprobe $MODULE
  done
done

################################################################################
# console ######################################################################
################################################################################

echo "initscript: setting console keymap and font"

if [ $CONSOLE_KEYMAP ]; then
  /usr/bin/loadkeys $CONSOLE_KEYMAP
fi

if [ $CONSOLE_FONT ]; then
  for TTY in /dev/tty[0-9]*; do
    /usr/bin/setfont $CONSOLE_FONT -C $TTY 1>/dev/null 2>/dev/null
  done
fi

################################################################################
# loopback #####################################################################
################################################################################

echo "initscript: setting loopback device"

if [ -d /sys/class/net/lo ]; then
  ip link set up dev lo
fi

################################################################################
# filesystems ##################################################################
################################################################################

echo "initscript: mounting filesystems"

mount -o remount,rw /
mount -a

echo "initscript: activating swap"

swapon -a

################################################################################
# random number generator ######################################################
################################################################################

echo "initscript: initializing random number generator"

RANDOM_SEED=/var/lib/misc/random-seed

if [ -r $RANDOM_SEED ]; then
  cat $RANDOM_SEED > /dev/urandom
else
  touch $RANDOM_SEED
fi

chmod 600 $RANDOM_SEED

POOL_FILE=/proc/sys/kernel/random/poolsize

if [ -r $POOL_FILE ]; then
  POOL_SIZE=$(cat $POOL_FILE)
else
  POOL_SIZE=512
fi

dd if=/dev/urandom of=$RANDOM_SEED count=1 bs=$POOL_SIZE 1>/dev/null 2>/dev/null

################################################################################
# volatile and temporary files #################################################
################################################################################

echo "initscript: setting volatile and temporary files"

if [ -x /usr/bin/systemd-tmpfiles ]; then
  /usr/bin/systemd-tmpfiles --create --remove --boot --exclude-prefix=/dev
elif [ -x /usr/bin/tmpfiles ]; then
  /usr/bin/tmpfiles --exclude-prefix=/dev
fi

rm -f /run/nologin

################################################################################
# sysctl #######################################################################
################################################################################

echo "initscript: setting kernel parameters"

DIR1=/etc/sysctl.d
DIR2=/run/sysctl.d
DIR3=/usr/lib/sysctl.d

for FILE in $(find $DIR1 $DIR2 $DIR3 -name '*.conf' -exec basename '{}' \; 2>/dev/null | sort -u); do

  [ -r $DIR3/$FILE ] && IFILE=$DIR3/$FILE
  [ -r $DIR2/$FILE ] && IFILE=$DIR2/$FILE
  [ -r $DIR1/$FILE ] && IFILE=$DIR1/$FILE

  sysctl -q -p $IFILE
done

################################################################################
# dmesg ########################################################################
################################################################################

echo "initscript: saving dmesg"

umask 077
dmesg > /var/log/dmesg
umask 022

################################################################################
# services #####################################################################
################################################################################

echo "initscript: starting services"

for SERVICE in $SERVICES; do
  /etc/rc.d/$SERVICE start
done

################################################################################
# local script #################################################################
################################################################################

echo "initscript: running local script"

. /etc/rc.local

# vim: set filetype=sh: