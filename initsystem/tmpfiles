#!/bin/ash

# This file is part of initsystem
#
# Copyright (C) 2014-2016 ValÃ¨re Monseur (valere dot monseur at ymail dot com)
#
# This program is free software; you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published by
# the Free Software Foundation; either version 2 of the License, or
# (at your option) any later version.
#
# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License along
# with this program; if not, write to the Free Software Foundation, Inc.,
# 51 Franklin Street, Fifth Floor, Boston, MA 02110-1301 USA.

PATH=/opt/busybox
LC_ALL=C

export PATH LC_ALL

################################################################################
# sanity check #################################################################
################################################################################

if [ $(id -u) != 0 ]; then
  echo "error: this script should be run as root"
  exit 1
fi

################################################################################
# parameters ###################################################################
################################################################################

INCLUDE=""; EXCLUDE=""; REMOVE=""

while [ $# -gt 0 ]; do
  case "$1" in
    --prefix=*)         INCLUDE="${1#--prefix=}" ;;
    --exclude-prefix=*) EXCLUDE="${1#--exclude-prefix=}" ;;
    --remove)           REMOVE="true" ;;
  esac

  shift
done

################################################################################
# process tmpfiles #############################################################
################################################################################

DIR1="/usr/lib/tmpfiles.d"
DIR2="/etc/tmpfiles.d"

for FILE in $(find "${DIR1}" "${DIR2}" -name *.conf -exec basename '{}' \; 2> /dev/null | sort -u); do

  [ -r "${DIR1}/${FILE}" ] && IFILE="${DIR1}/${FILE}"
  [ -r "${DIR2}/${FILE}" ] && IFILE="${DIR2}/${FILE}"

  grep -E -v "^[[:blank:]]*(#|$)" "${IFILE}" | while read LINE; do

    TYP=""; PTH=""; MOD=""; UID=""; GID=""; AGE=""; ARG=""

    for FIELD in $(echo "${LINE}" | \
      awk -F '"' -v OFS='' '{ for (i=2; i<=NF; i+=2) gsub(" ", "\\x20", $i) } 1'); do

      FIELD=$(echo -e "${FIELD}")

      [ -z "${TYP}" ] && TYP="${FIELD}" && continue
      [ -z "${PTH}" ] && PTH="${FIELD}" && continue
      [ -z "${MOD}" ] && MOD="${FIELD}" && continue
      [ -z "${UID}" ] && UID="${FIELD}" && continue
      [ -z "${GID}" ] && GID="${FIELD}" && continue
      [ -z "${AGE}" ] && AGE="${FIELD}" && continue
      [ -z "${ARG}" ] && ARG="${FIELD}" && continue
    done

    # skip included/excluded paths
    [ "${INCLUDE}" ] && [ "${PTH##${INCLUDE}*}" ] && continue
    [ "${EXCLUDE}" ] && [ ! "${PTH##${EXCLUDE}*}" ] && continue

    # skip path with a percent sign
    [ $(echo ${PTH} | grep '%') ] && continue

    # remove trailing ! from type
    [ $(echo ${TYP} | grep '!$') ] && TYP="${TYP%?}"

    # remove leading ~ from mode
    [ $(echo ${MOD} | grep '^~') ] && MOD="${MOD#~}"

    [ "${MOD}" = "-" ] && MOD=""
    [ "${UID}" = "-" ] && UID=""
    [ "${GID}" = "-" ] && GID=""
    [ "${AGE}" = "-" ] && AGE=""
    [ "${ARG}" = "-" ] && ARG=""

    [ -z "${TYP}" ] && continue
    [ -z "${PTH}" ] && continue

    case "${TYP}" in

      "f")

        if [ ! -e "${PTH}" ] && [ ! -L "${PTH}" ]; then
          [ -z "${MOD}" ] && MOD="0644"
          [ -z "${UID}" ] && UID="root"
          [ -z "${GID}" ] && GID="root"

          install -o "${UID}" -g "${GID}" -m "${MOD}" /dev/null "${PTH}"

          [ ! -z "${ARG}" ] && echo "${ARG}" > "${PTH}"
        fi
        ;;

      "F")

        [ -z "${MOD}" ] && MOD="0644"
        [ -z "${UID}" ] && UID="root"
        [ -z "${GID}" ] && GID="root"

        install -m "${MOD}" -o "${UID}" -g "${GID}" /dev/null "${PTH}"

        [ ! -z "${ARG}" ] && echo "${ARG}" > "${PTH}"
        ;;

      "w")

        if [ -e "${PTH}" ]; then
          [ "${ARG}" ] && echo -n -e "${ARG}" > "${PTH}"
        fi
        ;;

      "d"|"e"|"v"|"q"|"Q")

        if [ ! -e "${PTH}" ] && [ ! -L "${PTH}" ]; then
          [ -z "${MOD}" ] && MOD="0755"
          [ -z "${UID}" ] && UID="root"
          [ -z "${GID}" ] && GID="root"

          install -d -m "${MOD}" -o "${UID}" -g "${GID}" "${PTH}"
        fi
        ;;

      "D")

        if [ ! -z "${REMOVE}" && -d "${PTH}" ]; then
          find "${PTH}" -mindepth 1 -maxdepth 1 -xdev -print0 | xargs -r0 rm -rf
        fi

        if [ ! -e "${PTH}" ] && [ ! -L "${PTH}" ]; then
          [ -z "${MOD}" ] && MOD="0755"
          [ -z "${UID}" ] && UID="root"
          [ -z "${GID}" ] && GID="root"

          install -d -m "${MOD}" -o "${UID}" -g "${GID}" "${PTH}"
        fi
        ;;

      "p")

        if [ ! -e "${PTH}" ] && [ ! -L "${PTH}" ]; then
          [ -z "${MOD}" ] && MOD="0644"
          [ -z "${UID}" ] && UID="root"
          [ -z "${GID}" ] && GID="root"

          mkfifo -m "${MOD}" "${PTH}"
          chown "${UID}:${GID}" "${PTH}"
        fi
        ;;

      "p+")

        if [ -e "${PTH}" ] || [ -L "${PTH}" ]; then
          rm -f "${PTH}"
        fi

        [ -z "${MOD}" ] && MOD="0644"
        [ -z "${UID}" ] && UID="root"
        [ -z "${GID}" ] && GID="root"

        mkfifo -m "${MOD}" "${PTH}"
        chown "${UID}:${GID}" "${PTH}"
        ;;

      "L")

        if [ ! -e "${PTH}" ] && [ ! -L "${PTH}" ]; then
          if [ "${ARG}" ]; then
            ln -s "${ARG}" "${PTH}"
          fi
        fi
        ;;

      "L+")

        if [ -e "${PTH}" ] || [ -L "${PTH}" ]; then
          rm -f "${PTH}"
        fi

        if [ "${ARG}" ]; then
          ln -s "${ARG}" "${PTH}"
        fi
        ;;

      "c")

        if [ ! -e "${PTH}" ] && [ ! -L "${PTH}" ]; then
          if [ "${ARG}" ]; then
            MAJOR=$(echo ${ARG} | cut -d ':' -f 1)
            MINOR=$(echo ${ARG} | cut -d ':' -f 2)

            [ -z "${MOD}" ] && MOD="0644"
            [ -z "${UID}" ] && UID="root"
            [ -z "${GID}" ] && GID="root"

            mknod -m "${MOD}" "${PTH}" c "${MAJOR}" "${MINOR}"
            chown "${UID}:${GID}" "${PTH}"
          fi
        fi
        ;;

      "c+")

        if [ -e "${PTH}" ] || [ -L "${PTH}" ]; then
          rm -f "${PTH}"
        fi

        if [ "${ARG}" ]; then
          MAJOR=$(echo ${ARG} | cut -d ':' -f 1)
          MINOR=$(echo ${ARG} | cut -d ':' -f 2)

          [ -z "${MOD}" ] && MOD="0644"
          [ -z "${UID}" ] && UID="root"
          [ -z "${GID}" ] && GID="root"

          mknod -m "${MOD}" "${PTH}" c "${MAJOR}" "${MINOR}"
          chown "${UID}:${GID}" "${PTH}"
        fi
        ;;

      "b")

        if [ ! -e "${PTH}" ] && [ ! -L "${PTH}" ]; then
          if [ "${ARG}" ]; then
            MAJOR=$(echo ${ARG} | cut -d ':' -f 1)
            MINOR=$(echo ${ARG} | cut -d ':' -f 2)

            [ -z "${MOD}" ] && MOD="0644"
            [ -z "${UID}" ] && UID="root"
            [ -z "${GID}" ] && GID="root"

            mknod -m "${MOD}" "${PTH}" b "${MAJOR}" "${MINOR}"
            chown "${UID}:${GID}" "${PTH}"
          fi
        fi
        ;;

      "b+")

        if [ -e "${PTH}" ] || [ -L "${PTH}" ]; then
          rm -f "${PTH}"
        fi

        if [ "${ARG}" ]; then
          MAJOR=$(echo ${ARG} | cut -d ':' -f 1)
          MINOR=$(echo ${ARG} | cut -d ':' -f 2)

          [ -z "${MOD}" ] && MOD="0644"
          [ -z "${UID}" ] && UID="root"
          [ -z "${GID}" ] && GID="root"

          mknod -m "${MOD}" "${PTH}" b "${MAJOR}" "${MINOR}"
          chown "${UID}:${GID}" "${PTH}"
        fi
        ;;

      "C")

        if [ ! -e "${PTH}" ] && [ ! -L "${PTH}" ]; then
          if [ "${ARG}" ]; then
            if [ -e "${ARG}" ] || [ -L "${ARG}" ]; then
              cp -R "${ARG}" "${PTH}"
            fi
          fi
        fi
        ;;

      "x")
        ;;

      "X")
        ;;

      "r")

        if [ -d "${PTH}" ]; then
          rmdir "${PTH}"
        elif [ -e "${PTH}" ] || [ -L "${PTH}" ]; then
          rm -f "${PTH}"
        fi
        ;;

      "R")

        if [ -e "${PTH}" ] || [ -L "${PTH}" ]; then
          rm -rf "${PTH}"
        fi
        ;;

      "z")

        if [ -e "${PTH}" ]; then
          if [ "${MOD}" ]; then
            chmod "${MOD}" "${PTH}"
          fi

          if [ "${UID}" ]; then
            chown "${UID}" "${PTH}"
          fi

          if [ "${GID}" ]; then
            chown :"${GID}" "${PTH}"
          fi
        fi
        ;;

      "Z")

        if [ -e "${PTH}" ]; then
          if [ "${MOD}" ]; then
            chmod -R "${MOD}" "${PTH}"
          fi

          if [ "${UID}" ]; then
            chown -R "${UID}" "${PTH}"
          fi

          if [ "${GID}" ]; then
            chown -R :"${GID}" "${PTH}"
          fi
        fi
        ;;

      *)
        echo "error: unknown type ${TYP} for '${LINE}'"
        ;;

    esac
  done
done
